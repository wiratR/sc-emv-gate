# .github/workflows/release-on-tag.yml
name: Release on Tag

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build_macos:
    name: macOS build & release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Point node-gyp to setup-python (macOS)
        run: |
          echo "Using pythonLocation: $pythonLocation"
          echo "PYTHON=$pythonLocation/bin/python" >> $GITHUB_ENV
          echo "npm_config_python=$pythonLocation/bin/python" >> $GITHUB_ENV
          $pythonLocation/bin/python -m pip install --upgrade pip setuptools wheel

      - name: Cache Electron caches
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/electron
            ~/.cache/electron-builder
          key: ${{ runner.os }}-electron-${{ hashFiles('package-lock.json') }}

      - name: Auto codesign off (no cert)
        run: echo "CSC_IDENTITY_AUTO=true" >> $GITHUB_ENV

      - name: Set version from tag
        run: |
          VERSION="${GITHUB_REF_NAME#v}"
          echo "Setting version to $VERSION"
          npm version "$VERSION" --no-git-tag-version

      - name: Install deps (no scripts)
        run: npm ci --ignore-scripts

      - name: Build macOS
        run: npm run build:mac

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.dmg
            dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  build_windows:
    name: Windows build & release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Point node-gyp to setup-python (Windows)
        shell: pwsh
        run: |
          $PY = "$env:pythonLocation\python.exe"
          echo "PYTHON=$PY" >> $env:GITHUB_ENV
          echo "npm_config_python=$PY" >> $env:GITHUB_ENV
          & $PY -m pip install --upgrade pip setuptools wheel

      - name: Cache Electron caches
        uses: actions/cache@v4
        with:
          path: |
            C:\Users\runneradmin\AppData\Local\electron\Cache
            C:\Users\runneradmin\AppData\Local\electron-builder\Cache
          key: ${{ runner.os }}-electron-${{ hashFiles('package-lock.json') }}

      - name: Set version from tag
        shell: bash
        run: |
          VERSION="${GITHUB_REF_NAME#v}"
          echo "Setting version to $VERSION"
          npm version "$VERSION" --no-git-tag-version

      - name: Install deps (no scripts)
        run: npm ci --ignore-scripts

      - name: Build Windows
        run: npm run build:win

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.exe
            dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  build_linux:
    name: Linux build & release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install system deps (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential python3 python3-distutils make g++ pkg-config \
            libx11-dev libxkbfile-dev libsecret-1-dev \
            rpm fakeroot dpkg
          python3 -m pip install --user --upgrade pip setuptools wheel

      - name: Cache Electron caches
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/electron
            ~/.cache/electron-builder
          key: ${{ runner.os }}-electron-${{ hashFiles('package-lock.json') }}

      - name: Set version from tag
        run: |
          VERSION="${GITHUB_REF_NAME#v}"
          echo "Setting version to $VERSION"
          npm version "$VERSION" --no-git-tag-version

      - name: Install deps (no scripts)
        run: npm ci --ignore-scripts

      - name: Build Linux
        run: npm run build:linux

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.AppImage
            dist/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
