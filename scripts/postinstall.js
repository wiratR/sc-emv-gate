// scripts/postinstall.js
(async () => {
  try {
    // ‡∏Ç‡πâ‡∏≤‡∏°‡∏ö‡∏ô CI
    if (process.env.CI) {
      console.log('skip rebuild on CI');
      return;
    }

    const { rebuild } = require('@electron/rebuild');

    // ‡∏´‡∏≤‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô Electron ‡πÅ‡∏ö‡∏ö‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
    let electronVersion;
    try {
      electronVersion = require('electron/package.json').version;
    } catch {
      try {
        const pkg = require('../package.json');
        electronVersion =
          (pkg.devDependencies && pkg.devDependencies.electron) ||
          (pkg.dependencies && pkg.dependencies.electron) ||
          undefined;
        // ‡∏ï‡∏±‡∏î ^ ~ ‡∏≠‡∏≠‡∏Å‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
        if (electronVersion && /^[~^]/.test(electronVersion)) {
          electronVersion = electronVersion.slice(1);
        }
      } catch {}
    }

    if (!electronVersion) {
      console.warn('‚ö†Ô∏è  Electron not installed yet. Skipping electron-rebuild.');
      return; // ‡πÑ‡∏°‡πà‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤ error
    }

    console.log(`üîß electron-rebuild for Electron ${electronVersion} ...`);
    await rebuild({
      buildPath: process.cwd(),
      electronVersion,
      force: true,
      onlyModules: ['better-sqlite3', 'node-pty'],
    });
    console.log('‚úÖ electron-rebuild done');
  } catch (e) {
    console.error(e);
    // ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ install fail ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ö‡∏≤‡∏á‡∏™‡∏†‡∏≤‡∏û‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°‡πÑ‡∏°‡πà‡∏°‡∏µ toolchain
    process.exit(0);
  }
})();
